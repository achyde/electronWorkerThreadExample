{"version":3,"sources":["../../electron/main/testRunner.ts"],"sourcesContent":["import {parentPort, workerData} from \"worker_threads\";\n\nconst log_test_status = (val: string) => parentPort.postMessage({msg: val});\nconst log_julian_time = (val: string) => parentPort.postMessage({julian_time: val});\n\nconst runTest = async (runs: number, steps: number) => {\n\n    const sleep = (amount: number) => new Promise((resolve) => setTimeout(resolve, amount));\n\n    const timeBetweenStepsSeconds = 10;\n    const startDelaySec = 5;\n    const secondsToWaitForTest = (timeBetweenStepsSeconds * steps) + startDelaySec;\n\n    const getJulianTime = () => ((new Date().getTime() / 86400000) + 2440587.5).toFixed(5);\n\n    log_test_status(`Start test session`);\n    log_test_status(`${getJulianTime()}`);\n\n    setInterval(() => log_julian_time(getJulianTime()), 250);\n\n    for (let i = 0; i < runs; i++) {\n\n        log_test_status(`Running test ${i + 1}`);\n\n        await Promise.resolve(log_test_status(\"Start of async work\"))\n            .then(() => log_test_status(`sleep(2000)`))\n            .then(() => sleep(2000))\n            .then(() => log_test_status(JSON.stringify({success:true})))\n            .then(() => log_test_status(`Waiting ${secondsToWaitForTest} seconds for test ${i + 1} to finish`))\n            .then(() => sleep(secondsToWaitForTest * 1000))\n            .then(() => log_test_status(`Finished test ${i + 1}`))\n    }\n    log_test_status(`End test session`);\n}\n\nrunTest(workerData.runs, workerData.steps).then(() => parentPort.close());\n"],"mappings":"AAAA,4BAAqC;AAErC,MAAM,kBAAkB,CAAC,QAAgB,iCAAW,YAAY,EAAC,KAAK,IAAG,CAAC;AAC1E,MAAM,kBAAkB,CAAC,QAAgB,iCAAW,YAAY,EAAC,aAAa,IAAG,CAAC;AAElF,MAAM,UAAU,OAAO,MAAc,UAAkB;AAEnD,QAAM,QAAQ,CAAC,WAAmB,IAAI,QAAQ,CAAC,YAAY,WAAW,SAAS,MAAM,CAAC;AAEtF,QAAM,0BAA0B;AAChC,QAAM,gBAAgB;AACtB,QAAM,uBAAwB,0BAA0B,QAAS;AAEjE,QAAM,gBAAgB,OAAQ,IAAI,KAAK,EAAE,QAAQ,IAAI,QAAY,aAAW,QAAQ,CAAC;AAErF,kBAAgB,oBAAoB;AACpC,kBAAgB,GAAG,cAAc,GAAG;AAEpC,cAAY,MAAM,gBAAgB,cAAc,CAAC,GAAG,GAAG;AAEvD,WAAS,IAAI,GAAG,IAAI,MAAM,KAAK;AAE3B,oBAAgB,gBAAgB,IAAI,GAAG;AAEvC,UAAM,QAAQ,QAAQ,gBAAgB,qBAAqB,CAAC,EACvD,KAAK,MAAM,gBAAgB,aAAa,CAAC,EACzC,KAAK,MAAM,MAAM,GAAI,CAAC,EACtB,KAAK,MAAM,gBAAgB,KAAK,UAAU,EAAC,SAAQ,KAAI,CAAC,CAAC,CAAC,EAC1D,KAAK,MAAM,gBAAgB,WAAW,yCAAyC,IAAI,aAAa,CAAC,EACjG,KAAK,MAAM,MAAM,uBAAuB,GAAI,CAAC,EAC7C,KAAK,MAAM,gBAAgB,iBAAiB,IAAI,GAAG,CAAC;AAAA,EAC7D;AACA,kBAAgB,kBAAkB;AACtC;AAEA,QAAQ,iCAAW,MAAM,iCAAW,KAAK,EAAE,KAAK,MAAM,iCAAW,MAAM,CAAC;","names":[],"file":"testRunner.js"}